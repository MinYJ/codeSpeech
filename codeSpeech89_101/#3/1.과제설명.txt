(1)
코드를 못짜는 이유중 하나는 복잡한 for문 외에도if-else, if, switch를 잘 쓰지 못하기때문에 여러 문제점이 생긴다

(2) 언제 사용해야하나?
if
- optional: 이 일이 일어날 수도 있어
- shield: throw, return 되는 경우, 잘못된 값들이 밑으로 내려가게 하지 못하도록 하기때문이다
 

if else
  if(arr.length == 0) return `[]`;
  else return recursive(arr, "", 0);
- mandatory: 필수적으로 반드시 일어난다

- 병렬조건: 위, 아래 에서 처리하는일이 똑같다
>> 둘 모두 배열을 문자열로 바꾼값이 처리된다(둘 모두 의미적으로 같은 레벨에서 일어난다)
>> 제어를 제어하고 값으로 모을 수 있다

switch
- multiple mandatory
- 자바스크립트에서는 표현식과 조건분기를 스위치로 동시에 표현할 수 없다
  그래서 식을 기준으로 판단할때는 아래와 같다
switch(true){
  case arr.length == 0; return "[]";
  default:return recursive(arr, "", 0);
}

- switch도 mandatory이므로 빈틈이 없어야 한다.

(3)
while - recursive 사전에 계획되지 않은 반복 - 반복할때마다 다른 반복을 계산한다.
for - itereation - 사전에 계획된 반복 - 이미 반복을 어떻게 할지 계획을 세운다

(4)
함수는 인자가 상수값이기 때문에 인자를 갱신하면 안된다
재귀함수: 부수효과가가 전혀 없는 인자에만 의존하는것이다
반복문: 부수효과에만 의존해서 반복하는것을 말한다

재귀는 루프로 바꾸면 몸체에서 하던 일이 그 다음번 재귀에게 인자를 넘기기위해서 했던 연산과 똑같다
