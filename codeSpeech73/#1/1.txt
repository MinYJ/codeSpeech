#1 TO BE ACTUAL PROGRAMMER
(1)
그냥 개발을 공부하는것과 실제 개발하는것의 차이점은 무엇이냐?
첫 번째 복잡성에 있다

우리가 for문, while문을 모르는것이 아니다.
하지만 진짜 개발자와 개발자 준비생과의 차이점은 무엇이냐?
for문으로 구구단 만드는것과, for문으로 엑셀 피벗테이블 만드는것의 차이이다

우리가 원하는것은 복잡성을 정복할 수 있는 여러가지 수단을 만드는것에 있다
프로그램이 어려운 이유는 프로그램이 복잡하기 때문이다

(2)
두 번째
프로그램의 단 한 가지 법칙이 있다
프로그램은 변한다

앞으로 변화에 대해서 프로그램이 대응할 수 있는가?
나의 코드는 피벗테이블도 감당할 수 있는 복잡성을 정복할 수 있는가?
내가 짠 프로그램의 버전 업그레이드 할때 수정해서 바꿀 수 있는가?

#2 PROGRAM & TIMING
(1)
프로그램이란 무엇인가?
컴퓨터 메모리에 적재된이후 실행되기직전까지의 상태

(2)
복잡성을 정복하는 기본적인 전략은 격리이다
함수, 클래스, 디자인패턴, 프레임워크를 쓰는 이유는 어떤에러가 났을때 누구때문에 발생했는지 알기 위해서이다

개발자가 되기 어려운이유는 격리하기가 어렵기 때문이다

하나의 코드를 짜더라도 어떤 의미와 어떤 역할을 가지고 격리할 수 있는지 알아야한다.


#3 LEXICAL GRAMMAR