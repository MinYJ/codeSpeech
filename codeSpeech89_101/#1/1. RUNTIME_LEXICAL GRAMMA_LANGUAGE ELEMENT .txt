#1 RUNTIME
(1) 프로그램이란 무엇인가?
파일을 실행해서 OS가 메모리에 적재한 상태
메모리에 명령, 값으로 분리되어 올라가있는 상태

파일로되어있는 상태는 프로그램이 아니라, 메모리에 적재되서 올라가면 프로그램이다
하나의 실행파일을 올리면 명령세트가 쭈욱 메모리에 적재되서
이 명령이 사용하게 되는 값도 메모리에 올라가게된다

컴퓨터는 메모리에 적재되어 있는 명령을 순차적으로 소비하게 된다
다 소비하면 프로그램이 종료된다

명령은 위에서 아래로 적재된 순서대로 쭉 실행된다
중간에 분기처리를 하거나 아니면 명령에서 다시 점프명령을 통해서 명령의 특정부분으로 이동할 수 있다

(2)
명령이 실행되기 위해서 명령이 CPU로 올라간다
CPU에서 명령을 실행하기위해 메모리를 이용해서 실행된다

LOADING
INSTRUCTION FETCH & DECODING
EXECUTION

로딩: 메모리에 명령, 값을 적재하는 과정
명령을 전문용어로 instruction이라고 부른다

프로그래밍: 명령을 통해서 값을 갱신해가는 과정
명령과 값으로 메모리에 적재되고 명령이 처음부터 끝까지 다 실행되고 나면 종료되는것이다

명령은 메모리에 있는 값들을 참조해서 다시 값을 갱신하는것

(3)
컴파일할 경우 프로그램이 다 똑같은것은 아니지만, 
컴파일한 결과가 아래와같은 순서로 실행된다
ESSENTIAL DEFINITION LOADING (프로그램이 실행하기 위한 가장 기초적인 함수나 정의를 로딩해주는 과정)
VTABLE MAPPING(코드에서 짰던 변수명이 실제 메모리를 확보하면서 물리적인 메모리주소와 매핑되는 과정)
RUN(실행이 시작된다, 기초정의를 로딩한것과 변수공간을 이용해서 실행을 하다가)
RUNTIME DEFINITION LOADING (런타임 중에도 다시 함수, 클래스를 정의할 수 있다)

스크립트 언어들은 컴파일과정이 없기 때문에,
실행중에 무언가를 로딩하거나 만들어내거나 이용하거나 

이 과정을 계속반복한다

(4)
리액트를 로딩한 후, 리액트를 사용할 수 있다
제이쿼리 로딩한 후, 제이쿼리를 사용할 수 있다.

즉 로딩하기전에는, 위의 2개를 사용할 수 없다 
로딩한 이후 사용할 수 있다 

스크립언어에서는 이러한 이유로 컴파일과 런타임으로 구분하기 보다는, 그 런타임이 의존하고 있는 라이브러리를 로딩하는 시점을 
나누어서 STATIC TIME / RUN TIME으로 나누어서 구분한다.

상대적으로 로딩이 반복될때 마다 그 다음번 런타임이 태어나는 방식으로 작동한다.



#2 LEXICAL GRAMMAR

CONTROL CHARACTER 제어문자
WHITE SPACE 공백문자
LINE TERMINATORS 개행문자
COMMENTS 주석
KEYWORD 예약어
LITERALS  리터럴

(1)
리터럴: 언어에서 정의하는 더 이상 나눌 수 없는 값의 표현
자바스크립트는 함수를 값으로 보기에  함수를 만드는것도 리터럴의 일부이다



#3 LANGUAGE ELEMENT
STATEMENTS 문
공문, 식문, 제어문, 선언문     단문, 중문

EXPRESSION 식
값식, 연산식, 호출식

IDENTIFIER 식별자
기본형, 참조형     변수, 상수

A,B,C언어의 구성요소는 세 가지로 되어있다

(1)
문: 컴파일러가 해석한 뒤, 명령으로 바꿔주는 것
식: 컴파일러가 해석한 뒤, 값으로 바꿔주는 것
식별자: 식은 값으로 해석되지만 값의 위치의 별명이 필요
>> 메모리 주소 10번지에 있는지, 20번지에 있는지 궁금하다
>> 그 값이 어느 위치에 들어있는지 위치에 대한 별명
>> 메모리를 식별하기 위한 기

변수 a를 선언했을때의 의미: 메모리주소 10번지에 데이터저장한다, 특정메모리주소의 별명

프로그램을 짜고나면 명령(STATEMENT)과 값(EXPRESSION)으로 변한다 
식별자는 값의 위치를 어디인지 기억하는 것

(2)
프로그램 잘하는 방법: 현실세계의 난해한 문제를 패턴으로 파악하면 된다
난해한 문제에서 패턴 발견 -> 반복적행위로 바꿈 -> 프로그램으로 성공

패턴 발견이란 무슨말일까?
머리가 좋다
지능이 높을수록 패턴파악을 잘한다

패턴을 파악하는 힘은 추론이라고 불린다
추론은 법칙을 발견하는 힘이다
수학의 관점에서는 증명을 해내는 과정이다

컴퓨터는 반복만할줄아는 깡통이다
그러므로, 우리는 현실세계의 난해한 문제에서 패턴을 발견하고
그것을 컴퓨터에게 시킬 수 있어야한다